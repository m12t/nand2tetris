// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
        // right now reset won't work since it relies on load, which it shouldn't.

        // reset has highest priority, so do that operation LAST. reverse the order...

        Inc16(in=previous, out=incremented);                           // only use if inc == 1
        Mux16(a=previous, b=incremented, sel=inc, out=o1);

        Mux16(a=o1, b=in, sel=load, out=o2);

        Or(a=inc, b=load, out=action1);

        Mux16(a=in, b=o2, sel=action1, out=o3);
        Mux16(a=o3, b=false, sel=reset, out=o4);  // this takes precedence over other actions

        Or(a=reset, b=action1, out=action2);
        Register(in=o4, load=action2, out=previous, out=out);                 // optionally load in

}
